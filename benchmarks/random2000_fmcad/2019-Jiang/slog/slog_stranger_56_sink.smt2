(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun sigmaStar_16 () String)
(declare-fun sigmaStar_22 () String)
(declare-fun x_10 () String)
(declare-fun sigmaStar_33 () String)
(declare-fun x_17 () String)
(declare-fun sigmaStar_36 () String)
(declare-fun literal_29 () String)
(declare-fun x_23 () String)
(declare-fun x_41 () String)
(declare-fun literal_40 () String)
(declare-fun x_34 () String)
(declare-fun x_46 () String)
(declare-fun literal_42 () String)
(declare-fun x_48 () String)
(declare-fun sigmaStar_49 () String)
(declare-fun x_37 () String)
(declare-fun literal_52 () String)
(declare-fun x_55 () String)
(declare-fun literal_47 () String)
(declare-fun x_56 () String)
(declare-fun literal_53 () String)
(declare-fun x_50 () String)
(declare-fun x_59 () String)
(declare-fun literal_54 () String)
(declare-fun x_62 () String)
(declare-fun literal_58 () String)
(declare-fun x_64 () String)
(declare-fun literal_65 () String)
(declare-fun x_70 () String)
(declare-fun literal_67 () String)
(declare-fun x_73 () String)
(declare-fun literal_68 () String)
(declare-fun x_76 () String)
(declare-fun literal_69 () String)
(declare-fun x_78 () String)
(declare-fun literal_75 () String)
(declare-fun x_84 () String)
(declare-fun literal_77 () String)
(declare-fun x_81 () String)
(declare-fun x_85 () String)
(declare-fun literal_83 () String)
(declare-fun x_87 () String)
(declare-fun x_88 () String)
(declare-fun x_91 () String)
(declare-fun literal_89 () String)
(declare-fun x_93 () String)
(declare-fun x_92 () String)
(declare-fun literal_90 () String)
(declare-fun x_94 () String)
(declare-fun x_95 () String)
(declare-fun literal_96 () String)
(declare-fun x_97 () String)
(declare-fun x_98 () String)
(assert (= x_10 (str.replace sigmaStar_0 "\u{2f}\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= x_17 (str.replace sigmaStar_3 "\u{2f}\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= x_23 (str.replace x_10 "\u{2f}\u{5c}\u{3c}\u{73}\u{63}\u{72}\u{69}\u{70}\u{74}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= x_34 (str.replace x_17 "\u{2f}\u{5c}\u{3c}\u{73}\u{63}\u{72}\u{69}\u{70}\u{74}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= x_37 (str.replace sigmaStar_4 "\u{2f}\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= literal_29 "\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{3c}\u{41}\u{20}\u{53}\u{54}\u{59}\u{4c}\u{45}\u{3d}\u{43}\u{4f}\u{4c}\u{4f}\u{52}\u{3a}\u{62}\u{6c}\u{75}\u{65}\u{3b}\u{20}\u{48}\u{52}\u{45}\u{46}\u{3d}\u{5c}\u{22}\u{6d}\u{61}\u{69}\u{6c}\u{74}\u{6f}\u{3a}"))
(assert (= x_41 (str.++ literal_29 x_23)))
(assert (= literal_40 "\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{3c}\u{41}\u{20}\u{53}\u{54}\u{59}\u{4c}\u{45}\u{3d}\u{43}\u{4f}\u{4c}\u{4f}\u{52}\u{3a}\u{62}\u{6c}\u{75}\u{65}\u{3b}\u{20}\u{48}\u{52}\u{45}\u{46}\u{3d}\u{5c}\u{22}\u{68}\u{74}\u{74}\u{70}\u{3a}\u{2f}\u{2f}"))
(assert (= x_46 (str.++ literal_40 x_34)))
(assert (= literal_42 "\u{5c}\u{22}\u{3e}\u{3c}\u{49}\u{4d}\u{47}\u{20}\u{53}\u{52}\u{43}\u{3d}"))
(assert (= x_48 (str.++ x_41 literal_42)))
(assert (= x_50 (str.replace x_37 "\u{2f}\u{5c}\u{3c}\u{73}\u{63}\u{72}\u{69}\u{70}\u{74}\u{28}\u{2e}\u{2a}\u{3f}\u{29}\u{2f}" "\u{42}\u{4c}\u{4f}\u{43}\u{4b}\u{45}\u{44}")))
(assert (= literal_52 "\u{5c}\u{22}\u{3e}\u{3c}\u{49}\u{4d}\u{47}\u{20}\u{53}\u{52}\u{43}\u{3d}"))
(assert (= x_55 (str.++ x_46 literal_52)))
(assert (= literal_47 "\u{68}\u{74}\u{74}\u{70}\u{3a}\u{2f}\u{2f}\u{6c}\u{6f}\u{63}\u{61}\u{6c}\u{68}\u{6f}\u{73}\u{74}\u{2f}\u{65}\u{6d}\u{61}\u{69}\u{6c}\u{62}\u{75}\u{74}\u{2e}\u{70}\u{6e}\u{67}"))
(assert (= x_56 (str.++ x_48 literal_47)))
(assert (= literal_53 "\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{3c}\u{41}\u{20}\u{53}\u{54}\u{59}\u{4c}\u{45}\u{3d}\u{43}\u{4f}\u{4c}\u{4f}\u{52}\u{3a}\u{62}\u{6c}\u{75}\u{65}\u{3b}\u{20}\u{48}\u{52}\u{45}\u{46}\u{3d}\u{70}\u{62}\u{6c}\u{67}\u{75}\u{65}\u{73}\u{74}\u{62}\u{6f}\u{6f}\u{6b}\u{2e}\u{70}\u{68}\u{70}\u{3f}\u{61}\u{63}\u{74}\u{69}\u{6f}\u{6e}\u{3d}\u{64}\u{65}\u{6c}\u{65}\u{74}\u{65}\u{26}\u{69}\u{64}\u{3d}"))
(assert (= x_59 (str.++ literal_53 x_50)))
(assert (= literal_54 "\u{68}\u{74}\u{74}\u{70}\u{3a}\u{2f}\u{2f}\u{6c}\u{6f}\u{63}\u{61}\u{6c}\u{68}\u{6f}\u{73}\u{74}\u{2f}\u{68}\u{6f}\u{6d}\u{65}\u{62}\u{75}\u{74}\u{2e}\u{70}\u{6e}\u{67}"))
(assert (= x_62 (str.++ x_55 literal_54)))
(assert (= literal_58 "\u{20}\u{42}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{3d}\u{30}\u{20}\u{41}\u{4c}\u{54}\u{3d}\u{5c}\u{22}"))
(assert (= x_64 (str.++ x_56 literal_58)))
(assert (= literal_65 "\u{3e}\u{3c}\u{49}\u{4d}\u{47}\u{20}\u{53}\u{52}\u{43}\u{3d}"))
(assert (= x_70 (str.++ x_59 literal_65)))
(assert (= literal_67 "\u{20}\u{42}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{3d}\u{30}\u{20}\u{41}\u{4c}\u{54}\u{3d}\u{5c}\u{22}"))
(assert (= x_73 (str.++ x_62 literal_67)))
(assert (= literal_68 "\u{65}\u{6d}\u{61}\u{69}\u{6c}\u{22}\u{3e}\u{3c}\u{2f}\u{41}\u{3e}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}"))
(assert (= x_76 (str.++ x_64 literal_68)))
(assert (= literal_69 "\u{68}\u{74}\u{74}\u{70}\u{3a}\u{2f}\u{2f}\u{6c}\u{6f}\u{63}\u{61}\u{6c}\u{68}\u{6f}\u{73}\u{74}\u{2f}\u{64}\u{65}\u{6c}\u{62}\u{75}\u{74}\u{2e}\u{70}\u{6e}\u{67}"))
(assert (= x_78 (str.++ x_70 literal_69)))
(assert (= literal_75 "\u{77}\u{65}\u{62}\u{73}\u{69}\u{74}\u{65}\u{20}\u{55}\u{52}\u{4c}\u{22}\u{3e}\u{3c}\u{2f}\u{41}\u{3e}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}"))
(assert (= x_84 (str.++ x_73 literal_75)))
(assert (= literal_77 "\u{3c}\u{2f}\u{54}\u{44}\u{3e}\u{3c}\u{54}\u{44}\u{20}\u{53}\u{54}\u{59}\u{4c}\u{45}\u{3d}\u{54}\u{45}\u{58}\u{54}\u{2d}\u{41}\u{4c}\u{49}\u{47}\u{4e}\u{3a}\u{72}\u{69}\u{67}\u{68}\u{74}\u{3b}\u{3e}\u{3c}\u{46}\u{4f}\u{4e}\u{54}\u{20}\u{53}\u{49}\u{5a}\u{45}\u{3d}\u{31}\u{3e}"))
(assert (or (= x_81 x_76) (= x_81 sigmaStar_1)))
(assert (= x_85 (str.++ literal_77 x_81)))
(assert (= literal_83 "\u{20}\u{42}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{3d}\u{30}\u{20}\u{41}\u{4c}\u{54}\u{3d}\u{5c}\u{22}"))
(assert (= x_87 (str.++ x_78 literal_83)))
(assert (or (= x_88 x_84) (= x_88 sigmaStar_5)))
(assert (= x_91 (str.++ x_85 x_88)))
(assert (= literal_89 "\u{64}\u{65}\u{6c}\u{65}\u{74}\u{65}\u{22}\u{3e}\u{3c}\u{2f}\u{41}\u{3e}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}"))
(assert (= x_93 (str.++ x_87 literal_89)))
(assert (= literal_90 "\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}\u{3c}\u{49}\u{4d}\u{47}\u{20}\u{53}\u{52}\u{43}\u{3d}\u{68}\u{74}\u{74}\u{70}\u{3a}\u{2f}\u{2f}\u{6c}\u{6f}\u{63}\u{61}\u{6c}\u{68}\u{6f}\u{73}\u{74}\u{2f}\u{69}\u{70}\u{62}\u{75}\u{74}\u{2e}\u{70}\u{6e}\u{67}\u{20}\u{42}\u{4f}\u{52}\u{44}\u{45}\u{52}\u{3d}\u{30}\u{20}\u{41}\u{4c}\u{54}\u{3d}\u{5c}\u{22}\u{22}\u{3e}\u{26}\u{6e}\u{62}\u{73}\u{70}\u{3b}"))
(assert (or (= x_92 literal_90) (= x_92 sigmaStar_6)))
(assert (= x_94 (str.++ x_91 x_92)))
(assert (= x_95 (str.++ x_94 x_93)))
(assert (= literal_96 "\u{3c}\u{2f}\u{46}\u{4f}\u{4e}\u{54}\u{3e}\u{3c}\u{2f}\u{54}\u{44}\u{3e}\u{3c}\u{2f}\u{54}\u{52}\u{3e}"))
(assert (= x_97 (str.++ x_95 literal_96)))
(assert (= x_98 (str.++ sigmaStar_2 x_97)))
(assert (str.in_re x_98 (re.++ (re.* re.allchar) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar)))))
(check-sat)
(exit)
