(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.* (re.+ (str.to_re "222"))) (re.++ (re.* (re.* (str.to_re "333"))) (re.++ (re.union (re.+ (str.to_re "444")) (re.union (str.to_re "555") (str.to_re "66"))) (re.++ (re.+ (re.union (str.to_re "77") (str.to_re "8"))) (re.++ (re.* (re.union (str.to_re "99") (str.to_re "aaa"))) (re.++ (re.+ (re.union (str.to_re "b") (str.to_re "c"))) (re.++ (re.* (re.union (str.to_re "ddd") (str.to_re "e"))) (re.++ (re.* (re.union (str.to_re "fff") (str.to_re "gg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.union (re.union (str.to_re "ii") (str.to_re "jjj")) (re.+ (str.to_re "kkk"))) (re.++ (re.union (re.union (str.to_re "l") (str.to_re "m")) (re.union (str.to_re "nnn") (str.to_re "o"))) (re.++ (re.+ (re.* (str.to_re "ppp"))) (re.++ (re.* (re.union (str.to_re "q") (str.to_re "rr"))) (re.++ (re.* (re.union (str.to_re "ss") (str.to_re "ttt"))) (re.++ (re.* (re.* (str.to_re "uuu"))) (re.++ (re.+ (re.union (str.to_re "vvv") (str.to_re "ww"))) (re.++ (re.+ (re.union (str.to_re "xx") (str.to_re "yyy"))) (re.++ (re.* (re.union (str.to_re "zzz") (str.to_re "AA"))) (re.++ (re.union (re.* (str.to_re "BBB")) (re.+ (str.to_re "CC"))) (re.++ (re.+ (re.* (str.to_re "D"))) (re.++ (re.union (re.* (str.to_re "EEE")) (re.* (str.to_re "FFF"))) (re.++ (re.* (re.* (str.to_re "GGG"))) (re.++ (re.* (re.union (str.to_re "HH") (str.to_re "II"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "KK"))) (re.++ (re.union (re.* (str.to_re "LL")) (re.+ (str.to_re "MM"))) (re.++ (re.* (re.+ (str.to_re "NN"))) (re.++ (re.+ (re.* (str.to_re "O"))) (re.++ (re.union (re.* (str.to_re "PP")) (re.union (str.to_re "QQ") (str.to_re "RRR"))) (re.++ (re.union (re.+ (str.to_re "S")) (re.union (str.to_re "TT") (str.to_re "UU"))) (re.++ (re.+ (re.+ (str.to_re "VVV"))) (re.++ (re.union (re.+ (str.to_re "WW")) (re.union (str.to_re "X") (str.to_re "Y"))) (re.++ (re.* (re.* (str.to_re "Z"))) (re.++ (re.+ (re.union (str.to_re "!") (str.to_re """"))) (re.++ (re.+ (re.* (str.to_re "##"))) (re.++ (re.union (re.union (str.to_re "$$$") (str.to_re "%%")) (re.* (str.to_re "&"))) (re.++ (re.union (re.union (str.to_re "'") (str.to_re "((")) (re.union (str.to_re "))") (str.to_re "***"))) (re.++ (re.union (re.* (str.to_re "+++")) (re.+ (str.to_re ",,"))) (re.++ (re.+ (re.union (str.to_re "--") (str.to_re "..."))) (re.++ (re.+ (re.* (str.to_re "//"))) (re.++ (re.union (re.+ (str.to_re "::")) (re.union (str.to_re ";;") (str.to_re "<"))) (re.++ (re.+ (re.union (str.to_re "=") (str.to_re ">>>"))) (re.++ (re.* (re.+ (str.to_re "???"))) (re.++ (re.union (re.union (str.to_re "@") (str.to_re "[[[")) (re.union (str.to_re "\\") (str.to_re "]"))) (re.++ (re.* (re.* (str.to_re "^^"))) (re.++ (re.+ (re.* (str.to_re "__"))) (re.++ (re.+ (re.+ (str.to_re "```"))) (re.++ (re.union (re.union (str.to_re "{{{") (str.to_re "||")) (re.+ (str.to_re "}}"))) (re.++ (re.union (re.* (str.to_re "~~")) (re.+ (str.to_re "000"))) (re.++ (re.+ (re.union (str.to_re "111") (str.to_re "22"))) (re.++ (re.* (re.* (str.to_re "333"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "555")) (re.* (str.to_re "66"))) (re.++ (re.* (re.* (str.to_re "7"))) (re.++ (re.+ (re.* (str.to_re "8"))) (re.++ (re.* (re.union (str.to_re "99") (str.to_re "aaa"))) (re.++ (re.* (re.union (str.to_re "bb") (str.to_re "cc"))) (re.++ (re.* (re.+ (str.to_re "d"))) (re.++ (re.* (re.+ (str.to_re "eee"))) (re.++ (re.+ (re.* (str.to_re "ff"))) (re.++ (re.union (re.union (str.to_re "g") (str.to_re "hhh")) (re.union (str.to_re "iii") (str.to_re "jj"))) (re.++ (re.+ (re.+ (str.to_re "k"))) (re.++ (re.+ (re.union (str.to_re "l") (str.to_re "mm"))) (re.++ (re.* (re.* (str.to_re "n"))) (re.++ (re.union (re.union (str.to_re "oo") (str.to_re "ppp")) (re.* (str.to_re "qq"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.* (str.to_re "s"))) (re.++ (re.* (re.* (str.to_re "tt"))) (re.++ (re.* (re.+ (str.to_re "uu"))) (re.++ (re.union (re.union (str.to_re "vvv") (str.to_re "w")) (re.* (str.to_re "xxx"))) (re.++ (re.* (re.* (str.to_re "y"))) (re.++ (re.* (re.union (str.to_re "zz") (str.to_re "AA"))) (re.++ (re.* (re.+ (str.to_re "BBB"))) (re.++ (re.+ (re.* (str.to_re "CC"))) (re.++ (re.+ (re.union (str.to_re "D") (str.to_re "E"))) (re.++ (re.+ (re.* (str.to_re "FF"))) (re.++ (re.* (re.union (str.to_re "GG") (str.to_re "H"))) (re.++ (re.union (re.* (str.to_re "I")) (re.+ (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.* (re.union (str.to_re "L") (str.to_re "MMM"))) (re.++ (re.union (re.union (str.to_re "NN") (str.to_re "OOO")) (re.+ (str.to_re "PP"))) (re.++ (re.+ (re.+ (str.to_re "QQQ"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.union (str.to_re "S") (str.to_re "TTT")) (re.union (str.to_re "UUU") (str.to_re "VV"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "XXX")) (re.* (str.to_re "YYY"))) (re.++ (re.* (re.union (str.to_re "Z") (str.to_re "!!"))) (re.++ (re.+ (re.+ (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "#")) (re.union (str.to_re "$$") (str.to_re "%%%"))) (re.++ (re.+ (re.+ (str.to_re "&&&"))) (re.++ (re.+ (re.union (str.to_re "'") (str.to_re "(("))) (re.++ (re.+ (re.union (str.to_re ")))") (str.to_re "*"))) (re.++ (re.union (re.union (str.to_re "+") (str.to_re ",,,")) (re.union (str.to_re "--") (str.to_re "..."))) (re.++ (re.* (re.* (str.to_re "/"))) (re.++ (re.+ (re.+ (str.to_re "::"))) (re.++ (re.union (re.* (str.to_re ";")) (re.union (str.to_re "<") (str.to_re "="))) (re.++ (re.union (re.+ (str.to_re ">>")) (re.union (str.to_re "?") (str.to_re "@@"))) (re.++ (re.* (re.+ (str.to_re "[["))) (re.union (re.union (str.to_re "\\") (str.to_re "]]")) (re.union (str.to_re "^^^") (str.to_re "_"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.union (str.to_re "000") (str.to_re "11")) (re.union (str.to_re "2") (str.to_re "333"))) (re.++ (re.* (re.* (str.to_re "44"))) (re.++ (re.* (re.+ (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.* (re.union (str.to_re "7") (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "a"))) (re.++ (re.union (re.* (str.to_re "b")) (re.union (str.to_re "c") (str.to_re "ddd"))) (re.++ (re.union (re.union (str.to_re "ee") (str.to_re "f")) (re.union (str.to_re "gg") (str.to_re "hhh"))) (re.++ (re.union (re.union (str.to_re "ii") (str.to_re "j")) (re.union (str.to_re "kk") (str.to_re "ll"))) (re.++ (re.+ (re.* (str.to_re "m"))) (re.++ (re.union (re.* (str.to_re "nnn")) (re.+ (str.to_re "ooo"))) (re.++ (re.* (re.union (str.to_re "ppp") (str.to_re "qq"))) (re.++ (re.+ (re.* (str.to_re "rrr"))) (re.++ (re.union (re.+ (str.to_re "sss")) (re.* (str.to_re "ttt"))) (re.++ (re.union (re.+ (str.to_re "uuu")) (re.* (str.to_re "v"))) (re.++ (re.* (re.+ (str.to_re "w"))) (re.++ (re.+ (re.* (str.to_re "xx"))) (re.++ (re.union (re.+ (str.to_re "y")) (re.union (str.to_re "z") (str.to_re "AA"))) (re.++ (re.union (re.union (str.to_re "B") (str.to_re "CCC")) (re.+ (str.to_re "D"))) (re.++ (re.* (re.* (str.to_re "EE"))) (re.++ (re.union (re.union (str.to_re "F") (str.to_re "GG")) (re.union (str.to_re "HHH") (str.to_re "I"))) (re.++ (re.union (re.union (str.to_re "J") (str.to_re "KK")) (re.* (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MMM") (str.to_re "N"))) (re.++ (re.union (re.union (str.to_re "O") (str.to_re "PPP")) (re.+ (str.to_re "Q"))) (re.++ (re.union (re.union (str.to_re "RR") (str.to_re "SS")) (re.+ (str.to_re "TTT"))) (re.++ (re.union (re.union (str.to_re "U") (str.to_re "V")) (re.+ (str.to_re "WWW"))) (re.++ (re.* (re.* (str.to_re "XX"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "Z"))) (re.++ (re.+ (re.union (str.to_re "!!!") (str.to_re """"))) (re.++ (re.+ (re.union (str.to_re "##") (str.to_re "$$"))) (re.++ (re.union (re.* (str.to_re "%%%")) (re.* (str.to_re "&&"))) (re.++ (re.+ (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.union (re.union (str.to_re ")))") (str.to_re "*")) (re.union (str.to_re "+++") (str.to_re ","))) (re.++ (re.+ (re.* (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re "...")) (re.+ (str.to_re "/"))) (re.++ (re.* (re.union (str.to_re "::") (str.to_re ";;"))) (re.++ (re.* (re.union (str.to_re "<<") (str.to_re "=="))) (re.++ (re.+ (re.union (str.to_re ">>") (str.to_re "?"))) (re.++ (re.+ (re.+ (str.to_re "@@@"))) (re.++ (re.union (re.* (str.to_re "[")) (re.+ (str.to_re "\\\\"))) (re.++ (re.* (re.+ (str.to_re "]]]"))) (re.++ (re.* (re.+ (str.to_re "^^^"))) (re.++ (re.+ (re.union (str.to_re "__") (str.to_re "``"))) (re.++ (re.+ (re.union (str.to_re "{{") (str.to_re "||"))) (re.++ (re.* (re.+ (str.to_re "}}}"))) (re.++ (re.union (re.+ (str.to_re "~~")) (re.+ (str.to_re "00"))) (re.++ (re.union (re.union (str.to_re "1") (str.to_re "22")) (re.+ (str.to_re "33"))) (re.++ (re.+ (re.* (str.to_re "444"))) (re.++ (re.union (re.+ (str.to_re "55")) (re.union (str.to_re "6") (str.to_re "7"))) (re.++ (re.union (re.+ (str.to_re "8")) (re.+ (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.* (re.union (str.to_re "b") (str.to_re "cc"))) (re.++ (re.* (re.* (str.to_re "d"))) (re.++ (re.union (re.* (str.to_re "ee")) (re.+ (str.to_re "ff"))) (re.++ (re.+ (re.* (str.to_re "gg"))) (re.++ (re.* (re.union (str.to_re "hhh") (str.to_re "i"))) (re.++ (re.union (re.+ (str.to_re "jj")) (re.+ (str.to_re "k"))) (re.++ (re.* (re.* (str.to_re "ll"))) (re.++ (re.+ (re.* (str.to_re "m"))) (re.++ (re.* (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.+ (str.to_re "ss"))) (re.++ (re.+ (re.* (str.to_re "tt"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.+ (re.+ (str.to_re "vv"))) (re.++ (re.* (re.* (str.to_re "ww"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.union (str.to_re "yyy") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BBB"))) (re.++ (re.+ (re.* (str.to_re "CC"))) (re.++ (re.+ (re.union (str.to_re "D") (str.to_re "E"))) (re.++ (re.+ (re.* (str.to_re "F"))) (re.++ (re.+ (re.+ (str.to_re "GGG"))) (re.++ (re.* (re.* (str.to_re "H"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.* (str.to_re "JJ"))) (re.++ (re.+ (re.* (str.to_re "KKK"))) (re.++ (re.union (re.union (str.to_re "LLL") (str.to_re "MM")) (re.+ (str.to_re "NN"))) (re.++ (re.+ (re.* (str.to_re "OOO"))) (re.++ (re.union (re.* (str.to_re "PPP")) (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.union (str.to_re "RR") (str.to_re "SS"))) (re.++ (re.+ (re.* (str.to_re "T"))) (re.++ (re.+ (re.union (str.to_re "UU") (str.to_re "VV"))) (re.++ (re.union (re.+ (str.to_re "W")) (re.union (str.to_re "X") (str.to_re "YY"))) (re.++ (re.+ (re.* (str.to_re "ZZ"))) (re.++ (re.union (re.* (str.to_re "!!!")) (re.union (str.to_re """") (str.to_re "#"))) (re.++ (re.* (re.* (str.to_re "$$"))) (re.++ (re.+ (re.union (str.to_re "%%%") (str.to_re "&&"))) (re.++ (re.+ (re.* (str.to_re "''"))) (re.++ (re.union (re.union (str.to_re "(") (str.to_re "))")) (re.* (str.to_re "*"))) (re.++ (re.union (re.* (str.to_re "++")) (re.union (str.to_re ",") (str.to_re "--"))) (re.++ (re.union (re.* (str.to_re "...")) (re.union (str.to_re "//") (str.to_re ":"))) (re.++ (re.* (re.+ (str.to_re ";"))) (re.++ (re.+ (re.+ (str.to_re "<<<"))) (re.++ (re.union (re.union (str.to_re "==") (str.to_re ">>>")) (re.union (str.to_re "??") (str.to_re "@@"))) (re.* (re.+ (str.to_re "[[[")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
