(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.+ (str.to_re "000")) (re.union (str.to_re "1") (str.to_re "222"))) (re.++ (re.+ (re.* (str.to_re "333"))) (re.++ (re.+ (re.* (str.to_re "4"))) (re.++ (re.* (re.+ (str.to_re "5"))) (re.++ (re.* (re.+ (str.to_re "66"))) (re.++ (re.union (re.+ (str.to_re "77")) (re.+ (str.to_re "88"))) (re.++ (re.* (re.+ (str.to_re "999"))) (re.++ (re.* (re.* (str.to_re "a"))) (re.++ (re.* (re.* (str.to_re "bb"))) (re.++ (re.+ (re.+ (str.to_re "cc"))) (re.++ (re.union (re.union (str.to_re "dd") (str.to_re "e")) (re.union (str.to_re "f") (str.to_re "gg"))) (re.++ (re.* (re.* (str.to_re "h"))) (re.++ (re.union (re.+ (str.to_re "ii")) (re.union (str.to_re "jjj") (str.to_re "kkk"))) (re.++ (re.+ (re.union (str.to_re "ll") (str.to_re "m"))) (re.++ (re.+ (re.+ (str.to_re "nn"))) (re.++ (re.* (re.* (str.to_re "oo"))) (re.++ (re.union (re.union (str.to_re "pp") (str.to_re "qq")) (re.+ (str.to_re "r"))) (re.++ (re.+ (re.union (str.to_re "sss") (str.to_re "ttt"))) (re.++ (re.union (re.union (str.to_re "u") (str.to_re "vvv")) (re.* (str.to_re "w"))) (re.++ (re.+ (re.union (str.to_re "xxx") (str.to_re "y"))) (re.++ (re.union (re.union (str.to_re "zzz") (str.to_re "A")) (re.* (str.to_re "BBB"))) (re.++ (re.union (re.+ (str.to_re "C")) (re.union (str.to_re "DD") (str.to_re "E"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "G")) (re.+ (str.to_re "HHH"))) (re.++ (re.+ (re.union (str.to_re "II") (str.to_re "JJJ"))) (re.++ (re.union (re.* (str.to_re "K")) (re.+ (str.to_re "L"))) (re.++ (re.union (re.+ (str.to_re "M")) (re.+ (str.to_re "N"))) (re.++ (re.* (re.union (str.to_re "OOO") (str.to_re "PPP"))) (re.++ (re.+ (re.+ (str.to_re "QQ"))) (re.++ (re.union (re.* (str.to_re "R")) (re.* (str.to_re "SS"))) (re.++ (re.+ (re.union (str.to_re "TT") (str.to_re "UUU"))) (re.++ (re.* (re.* (str.to_re "VVV"))) (re.++ (re.* (re.+ (str.to_re "WWW"))) (re.++ (re.* (re.+ (str.to_re "XX"))) (re.++ (re.union (re.+ (str.to_re "YY")) (re.* (str.to_re "Z"))) (re.++ (re.* (re.* (str.to_re "!!"))) (re.++ (re.+ (re.+ (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "###") (str.to_re "$$$"))) (re.++ (re.+ (re.union (str.to_re "%%%") (str.to_re "&"))) (re.++ (re.+ (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.union (re.* (str.to_re ")))")) (re.* (str.to_re "**"))) (re.++ (re.+ (re.union (str.to_re "+++") (str.to_re ",,"))) (re.++ (re.union (re.* (str.to_re "--")) (re.union (str.to_re "...") (str.to_re "/"))) (re.++ (re.+ (re.union (str.to_re ":::") (str.to_re ";;"))) (re.++ (re.union (re.* (str.to_re "<<")) (re.* (str.to_re "==="))) (re.++ (re.* (re.+ (str.to_re ">>"))) (re.* (re.* (str.to_re "???"))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.union (re.* (str.to_re "00")) (re.* (str.to_re "1"))) (re.++ (re.* (re.* (str.to_re "222"))) (re.++ (re.union (re.union (str.to_re "333") (str.to_re "444")) (re.+ (str.to_re "555"))) (re.++ (re.+ (re.* (str.to_re "666"))) (re.++ (re.* (re.* (str.to_re "777"))) (re.++ (re.+ (re.* (str.to_re "8"))) (re.++ (re.union (re.+ (str.to_re "999")) (re.* (str.to_re "a"))) (re.++ (re.+ (re.* (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "ccc")) (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.+ (re.* (str.to_re "f"))) (re.++ (re.union (re.* (str.to_re "g")) (re.* (str.to_re "h"))) (re.++ (re.union (re.union (str.to_re "i") (str.to_re "jjj")) (re.+ (str.to_re "kk"))) (re.++ (re.+ (re.+ (str.to_re "ll"))) (re.++ (re.union (re.union (str.to_re "mmm") (str.to_re "nn")) (re.union (str.to_re "o") (str.to_re "ppp"))) (re.++ (re.* (re.+ (str.to_re "q"))) (re.++ (re.+ (re.union (str.to_re "rr") (str.to_re "ss"))) (re.++ (re.* (re.union (str.to_re "tt") (str.to_re "uu"))) (re.++ (re.union (re.+ (str.to_re "v")) (re.* (str.to_re "w"))) (re.++ (re.union (re.* (str.to_re "xx")) (re.union (str.to_re "yy") (str.to_re "z"))) (re.++ (re.* (re.union (str.to_re "AAA") (str.to_re "BB"))) (re.++ (re.+ (re.+ (str.to_re "CC"))) (re.++ (re.union (re.* (str.to_re "DD")) (re.* (str.to_re "EEE"))) (re.++ (re.union (re.+ (str.to_re "F")) (re.* (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "III")) (re.+ (str.to_re "JJJ"))) (re.++ (re.* (re.* (str.to_re "K"))) (re.++ (re.* (re.+ (str.to_re "LLL"))) (re.++ (re.* (re.union (str.to_re "MMM") (str.to_re "N"))) (re.++ (re.union (re.union (str.to_re "OOO") (str.to_re "P")) (re.* (str.to_re "QQQ"))) (re.++ (re.* (re.union (str.to_re "RRR") (str.to_re "SS"))) (re.++ (re.union (re.union (str.to_re "TTT") (str.to_re "UU")) (re.+ (str.to_re "V"))) (re.++ (re.union (re.* (str.to_re "WW")) (re.* (str.to_re "XX"))) (re.++ (re.union (re.union (str.to_re "YY") (str.to_re "ZZ")) (re.union (str.to_re "!!!") (str.to_re """"""))) (re.++ (re.+ (re.+ (str.to_re "##"))) (re.++ (re.union (re.* (str.to_re "$")) (re.* (str.to_re "%"))) (re.++ (re.union (re.* (str.to_re "&")) (re.union (str.to_re "''") (str.to_re "(("))) (re.++ (re.* (re.* (str.to_re ")))"))) (re.++ (re.* (re.+ (str.to_re "***"))) (re.++ (re.* (re.* (str.to_re "++"))) (re.++ (re.* (re.+ (str.to_re ",,"))) (re.++ (re.union (re.union (str.to_re "--") (str.to_re ".")) (re.+ (str.to_re "//"))) (re.++ (re.union (re.+ (str.to_re "::")) (re.union (str.to_re ";;;") (str.to_re "<<"))) (re.++ (re.+ (re.+ (str.to_re "=="))) (re.++ (re.union (re.union (str.to_re ">>") (str.to_re "???")) (re.* (str.to_re "@@"))) (re.++ (re.+ (re.* (str.to_re "[[["))) (re.++ (re.+ (re.union (str.to_re "\\") (str.to_re "]]]"))) (re.* (re.* (str.to_re "^^")))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
