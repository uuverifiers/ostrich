(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.+ (re.* (str.to_re "000"))) (re.++ (re.+ (re.* (str.to_re "11"))) (re.++ (re.union (re.* (str.to_re "2")) (re.* (str.to_re "3"))) (re.++ (re.union (re.union (str.to_re "4") (str.to_re "55")) (re.+ (str.to_re "66"))) (re.++ (re.* (re.+ (str.to_re "7"))) (re.++ (re.+ (re.+ (str.to_re "8"))) (re.++ (re.* (re.+ (str.to_re "99"))) (re.++ (re.+ (re.* (str.to_re "a"))) (re.++ (re.* (re.+ (str.to_re "bb"))) (re.++ (re.union (re.union (str.to_re "ccc") (str.to_re "ddd")) (re.* (str.to_re "ee"))) (re.++ (re.+ (re.union (str.to_re "fff") (str.to_re "gg"))) (re.++ (re.union (re.+ (str.to_re "hhh")) (re.union (str.to_re "iii") (str.to_re "jjj"))) (re.++ (re.union (re.* (str.to_re "k")) (re.+ (str.to_re "ll"))) (re.++ (re.+ (re.+ (str.to_re "mm"))) (re.++ (re.* (re.* (str.to_re "nn"))) (re.++ (re.+ (re.+ (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "p"))) (re.++ (re.union (re.union (str.to_re "qqq") (str.to_re "rr")) (re.+ (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "t") (str.to_re "uuu")) (re.+ (str.to_re "v"))) (re.++ (re.+ (re.union (str.to_re "www") (str.to_re "x"))) (re.++ (re.+ (re.union (str.to_re "yy") (str.to_re "zz"))) (re.++ (re.union (re.union (str.to_re "AA") (str.to_re "B")) (re.* (str.to_re "CCC"))) (re.++ (re.union (re.* (str.to_re "DD")) (re.+ (str.to_re "EE"))) (re.++ (re.union (re.union (str.to_re "FF") (str.to_re "GG")) (re.* (str.to_re "HHH"))) (re.++ (re.union (re.+ (str.to_re "II")) (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.* (str.to_re "KKK"))) (re.++ (re.* (re.* (str.to_re "LL"))) (re.++ (re.+ (re.+ (str.to_re "MM"))) (re.++ (re.* (re.* (str.to_re "NN"))) (re.++ (re.* (re.* (str.to_re "OOO"))) (re.++ (re.* (re.union (str.to_re "PP") (str.to_re "Q"))) (re.++ (re.+ (re.* (str.to_re "R"))) (re.++ (re.union (re.union (str.to_re "SS") (str.to_re "TT")) (re.union (str.to_re "UUU") (str.to_re "V"))) (re.++ (re.+ (re.+ (str.to_re "WW"))) (re.++ (re.+ (re.+ (str.to_re "XXX"))) (re.++ (re.* (re.union (str.to_re "YY") (str.to_re "ZZZ"))) (re.++ (re.union (re.union (str.to_re "!!") (str.to_re """")) (re.union (str.to_re "#") (str.to_re "$$"))) (re.++ (re.+ (re.+ (str.to_re "%%"))) (re.++ (re.+ (re.* (str.to_re "&"))) (re.++ (re.+ (re.* (str.to_re "''"))) (re.++ (re.union (re.+ (str.to_re "(((")) (re.* (str.to_re "))"))) (re.++ (re.+ (re.union (str.to_re "*") (str.to_re "+++"))) (re.++ (re.+ (re.+ (str.to_re ",,,"))) (re.++ (re.+ (re.union (str.to_re "---") (str.to_re ".."))) (re.++ (re.* (re.* (str.to_re "//"))) (re.++ (re.* (re.* (str.to_re ":"))) (re.++ (re.* (re.union (str.to_re ";;;") (str.to_re "<"))) (re.++ (re.+ (re.union (str.to_re "=") (str.to_re ">>>"))) (re.++ (re.* (re.* (str.to_re "?"))) (re.++ (re.+ (re.+ (str.to_re "@@"))) (re.++ (re.union (re.+ (str.to_re "[[")) (re.+ (str.to_re "\\\\"))) (re.++ (re.union (re.+ (str.to_re "]]")) (re.union (str.to_re "^^^") (str.to_re "___"))) (re.++ (re.+ (re.union (str.to_re "```") (str.to_re "{{"))) (re.++ (re.* (re.* (str.to_re "||"))) (re.++ (re.* (re.* (str.to_re "}}"))) (re.++ (re.union (re.union (str.to_re "~~") (str.to_re "0")) (re.+ (str.to_re "1"))) (re.++ (re.* (re.union (str.to_re "22") (str.to_re "3"))) (re.++ (re.* (re.union (str.to_re "444") (str.to_re "55"))) (re.+ (re.union (str.to_re "6") (str.to_re "77")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
