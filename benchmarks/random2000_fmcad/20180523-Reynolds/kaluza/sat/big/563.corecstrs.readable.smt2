(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun T1_100 () String)
(declare-fun T1_104 () String)
(declare-fun T1_108 () String)
(declare-fun T1_112 () String)
(declare-fun T1_12 () String)
(declare-fun T1_16 () String)
(declare-fun T1_20 () String)
(declare-fun T1_24 () String)
(declare-fun T1_28 () String)
(declare-fun T1_32 () String)
(declare-fun T1_36 () String)
(declare-fun T1_4 () String)
(declare-fun T1_40 () String)
(declare-fun T1_44 () String)
(declare-fun T1_48 () String)
(declare-fun T1_52 () String)
(declare-fun T1_56 () String)
(declare-fun T1_60 () String)
(declare-fun T1_64 () String)
(declare-fun T1_68 () String)
(declare-fun T1_72 () String)
(declare-fun T1_76 () String)
(declare-fun T1_8 () String)
(declare-fun T1_80 () String)
(declare-fun T1_84 () String)
(declare-fun T1_88 () String)
(declare-fun T1_92 () String)
(declare-fun T1_96 () String)
(declare-fun T2_100 () String)
(declare-fun T2_104 () String)
(declare-fun T2_108 () String)
(declare-fun T2_112 () String)
(declare-fun T2_12 () String)
(declare-fun T2_16 () String)
(declare-fun T2_20 () String)
(declare-fun T2_24 () String)
(declare-fun T2_28 () String)
(declare-fun T2_32 () String)
(declare-fun T2_36 () String)
(declare-fun T2_4 () String)
(declare-fun T2_40 () String)
(declare-fun T2_44 () String)
(declare-fun T2_48 () String)
(declare-fun T2_52 () String)
(declare-fun T2_56 () String)
(declare-fun T2_60 () String)
(declare-fun T2_64 () String)
(declare-fun T2_68 () String)
(declare-fun T2_72 () String)
(declare-fun T2_76 () String)
(declare-fun T2_8 () String)
(declare-fun T2_80 () String)
(declare-fun T2_84 () String)
(declare-fun T2_88 () String)
(declare-fun T2_92 () String)
(declare-fun T2_96 () String)
(declare-fun T_1 () String)
(declare-fun T_10 () String)
(declare-fun T_11 () Bool)
(declare-fun T_12 () Bool)
(declare-fun T_13 () String)
(declare-fun T_14 () Bool)
(declare-fun T_15 () Bool)
(declare-fun T_16 () String)
(declare-fun T_17 () Bool)
(declare-fun T_18 () Bool)
(declare-fun T_19 () String)
(declare-fun T_1a () Bool)
(declare-fun T_1b () Bool)
(declare-fun T_1c () String)
(declare-fun T_1d () Bool)
(declare-fun T_1e () Bool)
(declare-fun T_1f () String)
(declare-fun T_2 () Bool)
(declare-fun T_20 () Bool)
(declare-fun T_21 () Bool)
(declare-fun T_22 () String)
(declare-fun T_23 () Bool)
(declare-fun T_24 () Bool)
(declare-fun T_25 () String)
(declare-fun T_26 () Bool)
(declare-fun T_27 () Bool)
(declare-fun T_28 () String)
(declare-fun T_29 () Bool)
(declare-fun T_2a () Bool)
(declare-fun T_2b () String)
(declare-fun T_2c () Bool)
(declare-fun T_2d () Bool)
(declare-fun T_2e () String)
(declare-fun T_2f () Bool)
(declare-fun T_3 () Bool)
(declare-fun T_30 () Bool)
(declare-fun T_31 () String)
(declare-fun T_32 () Bool)
(declare-fun T_33 () Bool)
(declare-fun T_34 () String)
(declare-fun T_35 () Bool)
(declare-fun T_36 () Bool)
(declare-fun T_37 () String)
(declare-fun T_38 () Bool)
(declare-fun T_39 () Bool)
(declare-fun T_3a () String)
(declare-fun T_3b () Bool)
(declare-fun T_3c () Bool)
(declare-fun T_3d () String)
(declare-fun T_3e () Bool)
(declare-fun T_3f () Bool)
(declare-fun T_4 () String)
(declare-fun T_40 () String)
(declare-fun T_41 () Bool)
(declare-fun T_42 () Bool)
(declare-fun T_43 () String)
(declare-fun T_44 () Bool)
(declare-fun T_45 () Bool)
(declare-fun T_46 () String)
(declare-fun T_47 () Bool)
(declare-fun T_48 () Bool)
(declare-fun T_49 () String)
(declare-fun T_4a () Bool)
(declare-fun T_4b () Bool)
(declare-fun T_4c () String)
(declare-fun T_4d () Bool)
(declare-fun T_4e () Bool)
(declare-fun T_4f () String)
(declare-fun T_5 () Bool)
(declare-fun T_50 () Bool)
(declare-fun T_51 () Bool)
(declare-fun T_52 () String)
(declare-fun T_53 () Bool)
(declare-fun T_54 () Bool)
(declare-fun T_6 () Bool)
(declare-fun T_7 () String)
(declare-fun T_8 () Bool)
(declare-fun T_9 () Bool)
(declare-fun T_a () String)
(declare-fun T_b () Bool)
(declare-fun T_c () Bool)
(declare-fun T_d () String)
(declare-fun T_e () Bool)
(declare-fun T_f () Bool)
(declare-fun var_0xINPUT_14904 () String)
(assert (= T_1 (str.++ T1_4 T2_4)))
(assert (= T2_4 var_0xINPUT_14904))
(assert (= T1_4 ""))
(assert (= T_2 (= "-" T_1)))
(assert (= T_3 (not T_2)))
(assert T_3)
(assert (= T_4 (str.++ T1_8 T2_8)))
(assert (= T2_8 var_0xINPUT_14904))
(assert (= T1_8 ""))
(assert (= T_5 (= "" T_4)))
(assert (= T_6 (not T_5)))
(assert T_6)
(assert (= T_7 (str.++ T1_12 T2_12)))
(assert (= T2_12 var_0xINPUT_14904))
(assert (= T1_12 ""))
(assert (= T_8 (= "" T_7)))
(assert (= T_9 (not T_8)))
(assert T_9)
(assert (= T_a (str.++ T1_16 T2_16)))
(assert (= T2_16 var_0xINPUT_14904))
(assert (= T1_16 ""))
(assert (= T_b (= "" T_a)))
(assert (= T_c (not T_b)))
(assert T_c)
(assert (= T_d (str.++ T1_20 T2_20)))
(assert (= T2_20 var_0xINPUT_14904))
(assert (= T1_20 ""))
(assert (= T_e (= "-" T_d)))
(assert (= T_f (not T_e)))
(assert T_f)
(assert (= T_10 (str.++ T1_24 T2_24)))
(assert (= T2_24 var_0xINPUT_14904))
(assert (= T1_24 ""))
(assert (= T_11 (= "" T_10)))
(assert (= T_12 (not T_11)))
(assert T_12)
(assert (= T_13 (str.++ T1_28 T2_28)))
(assert (= T2_28 var_0xINPUT_14904))
(assert (= T1_28 ""))
(assert (= T_14 (= "" T_13)))
(assert (= T_15 (not T_14)))
(assert T_15)
(assert (= T_16 (str.++ T1_32 T2_32)))
(assert (= T2_32 var_0xINPUT_14904))
(assert (= T1_32 ""))
(assert (= T_17 (= "" T_16)))
(assert (= T_18 (not T_17)))
(assert T_18)
(assert (= T_19 (str.++ T1_36 T2_36)))
(assert (= T2_36 var_0xINPUT_14904))
(assert (= T1_36 ""))
(assert (= T_1a (= "-" T_19)))
(assert (= T_1b (not T_1a)))
(assert T_1b)
(assert (= T_1c (str.++ T1_40 T2_40)))
(assert (= T2_40 var_0xINPUT_14904))
(assert (= T1_40 ""))
(assert (= T_1d (= "" T_1c)))
(assert (= T_1e (not T_1d)))
(assert T_1e)
(assert (= T_1f (str.++ T1_44 T2_44)))
(assert (= T2_44 var_0xINPUT_14904))
(assert (= T1_44 ""))
(assert (= T_20 (= "" T_1f)))
(assert (= T_21 (not T_20)))
(assert T_21)
(assert (= T_22 (str.++ T1_48 T2_48)))
(assert (= T2_48 var_0xINPUT_14904))
(assert (= T1_48 ""))
(assert (= T_23 (= "" T_22)))
(assert (= T_24 (not T_23)))
(assert T_24)
(assert (= T_25 (str.++ T1_52 T2_52)))
(assert (= T2_52 var_0xINPUT_14904))
(assert (= T1_52 ""))
(assert (= T_26 (= "-" T_25)))
(assert (= T_27 (not T_26)))
(assert T_27)
(assert (= T_28 (str.++ T1_56 T2_56)))
(assert (= T2_56 var_0xINPUT_14904))
(assert (= T1_56 ""))
(assert (= T_29 (= "" T_28)))
(assert (= T_2a (not T_29)))
(assert T_2a)
(assert (= T_2b (str.++ T1_60 T2_60)))
(assert (= T2_60 var_0xINPUT_14904))
(assert (= T1_60 ""))
(assert (= T_2c (= "" T_2b)))
(assert (= T_2d (not T_2c)))
(assert T_2d)
(assert (= T_2e (str.++ T1_64 T2_64)))
(assert (= T2_64 var_0xINPUT_14904))
(assert (= T1_64 ""))
(assert (= T_2f (= "" T_2e)))
(assert (= T_30 (not T_2f)))
(assert T_30)
(assert (= T_31 (str.++ T1_68 T2_68)))
(assert (= T2_68 var_0xINPUT_14904))
(assert (= T1_68 ""))
(assert (= T_32 (= "-" T_31)))
(assert (= T_33 (not T_32)))
(assert T_33)
(assert (= T_34 (str.++ T1_72 T2_72)))
(assert (= T2_72 var_0xINPUT_14904))
(assert (= T1_72 ""))
(assert (= T_35 (= "" T_34)))
(assert (= T_36 (not T_35)))
(assert T_36)
(assert (= T_37 (str.++ T1_76 T2_76)))
(assert (= T2_76 var_0xINPUT_14904))
(assert (= T1_76 ""))
(assert (= T_38 (= "" T_37)))
(assert (= T_39 (not T_38)))
(assert T_39)
(assert (= T_3a (str.++ T1_80 T2_80)))
(assert (= T2_80 var_0xINPUT_14904))
(assert (= T1_80 ""))
(assert (= T_3b (= "" T_3a)))
(assert (= T_3c (not T_3b)))
(assert T_3c)
(assert (= T_3d (str.++ T1_84 T2_84)))
(assert (= T2_84 var_0xINPUT_14904))
(assert (= T1_84 ""))
(assert (= T_3e (= "-" T_3d)))
(assert (= T_3f (not T_3e)))
(assert T_3f)
(assert (= T_40 (str.++ T1_88 T2_88)))
(assert (= T2_88 var_0xINPUT_14904))
(assert (= T1_88 ""))
(assert (= T_41 (= "" T_40)))
(assert (= T_42 (not T_41)))
(assert T_42)
(assert (= T_43 (str.++ T1_92 T2_92)))
(assert (= T2_92 var_0xINPUT_14904))
(assert (= T1_92 ""))
(assert (= T_44 (= "" T_43)))
(assert (= T_45 (not T_44)))
(assert T_45)
(assert (= T_46 (str.++ T1_96 T2_96)))
(assert (= T2_96 var_0xINPUT_14904))
(assert (= T1_96 ""))
(assert (= T_47 (= "" T_46)))
(assert (= T_48 (not T_47)))
(assert T_48)
(assert (= T_49 (str.++ T1_100 T2_100)))
(assert (= T2_100 var_0xINPUT_14904))
(assert (= T1_100 ""))
(assert (= T_4a (= "-" T_49)))
(assert (= T_4b (not T_4a)))
(assert T_4b)
(assert (= T_4c (str.++ T1_104 T2_104)))
(assert (= T2_104 var_0xINPUT_14904))
(assert (= T1_104 ""))
(assert (= T_4d (= "" T_4c)))
(assert (= T_4e (not T_4d)))
(assert T_4e)
(assert (= T_4f (str.++ T1_108 T2_108)))
(assert (= T2_108 var_0xINPUT_14904))
(assert (= T1_108 ""))
(assert (= T_50 (= "" T_4f)))
(assert (= T_51 (not T_50)))
(assert T_51)
(assert (= T_52 (str.++ T1_112 T2_112)))
(assert (= T2_112 var_0xINPUT_14904))
(assert (= T1_112 ""))
(assert (= T_53 (= "" T_52)))
(assert (= T_54 (not T_53)))
(assert T_54)
(check-sat)

(exit)
