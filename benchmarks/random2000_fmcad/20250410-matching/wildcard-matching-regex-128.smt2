(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Shaoke Cui
Generated on: 2025-04-10
Application: Using String Solvers to solve string matching problems
Target solver: Z3, Z3alpha, Z3-noodler
Benchmarks for string matching problem with wildcards, which needs to determine whether two strings containing two wildcards can match.
Use re.allchar and (re.* re.allchar) to represent wildcards.
Determine whether the two strings match by judging whether the result of re.inter is re.none.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unknown)
(assert (= re.none (re.inter  (re.++ (str.to_re "oxhacqxnokmewkt") (re.* re.allchar) (str.to_re "wzm") re.allchar (re.* re.allchar) (str.to_re "teimlyfwmhjh") (re.* re.allchar) (str.to_re "scmzhivnnorqikjzpycfblijgrwuduzk") re.allchar (str.to_re "f") re.allchar (str.to_re "w") (re.* re.allchar) (str.to_re "onzohzdbwceudtdaejnpgzpvuaroezalhdjkosuwuctxqskeniwblkgvrbaygzrfowxalhmxqwjmykncjziahqacttqvelmgblmnkvrot") re.allchar (str.to_re "x") re.allchar (str.to_re "jniwyqs") (re.* re.allchar) (re.* re.allchar) (str.to_re "dbpfibmceocfsmcdqgrirleycbuwdwevanhinbsu") re.allchar (str.to_re "ebawtfypftqsxuxthovwampodlugzyoifidxrrh") (re.* re.allchar) (str.to_re "r") re.allchar (str.to_re "qkg") (re.* re.allchar) (str.to_re "zqssxy") re.allchar (str.to_re "vssjxahvhjggwxi") (re.* re.allchar) (str.to_re "ozfuodurlgwfvamjqhs") re.allchar (str.to_re "ikogfcbkxrgrquxvbffomx") (re.* re.allchar) (str.to_re "q") (re.* re.allchar) (str.to_re "nxxuroevediokvvvzib") (re.* re.allchar) (str.to_re "revdjkrfxukhzcwxpfmdcvmssmzlhtxtyrrkbsxk") re.allchar (str.to_re "oqrthjflnwdwpjibbhiirlyplpjalicdklivslv") re.allchar re.allchar (str.to_re "ltkkajqupqxqenaszvkak") re.allchar (str.to_re "hbwygv") (re.* re.allchar) (str.to_re "qewl") (re.* re.allchar) (str.to_re "oncmifcatbfchipnpxbnaqztfi") (re.* re.allchar) (str.to_re "toqqsxpgcml") (re.* re.allchar) (str.to_re "xzgdwpmwynxkqskcnqcstwl") (re.* re.allchar) (str.to_re "lcctixsa") re.allchar (str.to_re "vfzozsibfdpbhidykpriqvcjvmmdoqycgg") (re.* re.allchar) (str.to_re "u") re.allchar (str.to_re "ep") re.allchar (str.to_re "qjtiyopk") re.allchar (str.to_re "wbefmqgonjkksscafauwhgnqifwda") (re.* re.allchar) (str.to_re "xoqxaydqhtzvdiarcanqdermwdwrlmxsnaxlswrkcqecbhmgvcodlzbcpuarzxinya") (re.* re.allchar) (str.to_re "dkeym") (re.* re.allchar) (str.to_re "yjemhlrjedhmujpo") (re.* re.allchar) (str.to_re "zljepfigxcpoqoizhpklfmdvxtkzexpxhpcybbfjnbzeueqwryvmnfuswowenkt") re.allchar (str.to_re "mwpenhuwkdrno") re.allchar (str.to_re "uopbeasbjtwdipyduklehueiznf") re.allchar (str.to_re "zdxik") (re.* re.allchar) (str.to_re "mqpegbkq") re.allchar (str.to_re "yycymodfmhxhxzyncifqemgctnjiimpbllaidcqlt") re.allchar (str.to_re "jnjoqtgnc") (re.* re.allchar) (str.to_re "a") re.allchar re.allchar (str.to_re "oejaggwyn") re.allchar (str.to_re "gzirkvtifvuwappfarjdjvjflcbpfadkecidkglgbgykceifruvkmkv") re.allchar (str.to_re "gklokraxnyxdgkbkfvmcokterkatybgecslnuzftiaasvn") (re.* re.allchar) (str.to_re "wtordnornkzb") re.allchar (str.to_re "r") (re.* re.allchar) (str.to_re "qcyvswk") (re.* re.allchar) (str.to_re "uttijjjigux") (re.* re.allchar) (str.to_re "culvcdxjpcnjxfknxqm") (re.* re.allchar) (str.to_re "dqg") (re.* re.allchar) (str.to_re "h") (re.* re.allchar) (str.to_re "kr") (re.* re.allchar) (str.to_re "iysclooifsejlqbjxrgfylkqaczuqh") re.allchar (str.to_re "bvpbzlqlfmgeq") (re.* re.allchar) (str.to_re "pxklrqdqmvuoobbbyzhjbice") re.allchar (str.to_re "cmqvfakgtxgywcxokyxvflpiuycgbkbxayjtrzb") re.allchar re.allchar (str.to_re "qerhdqizvijzyompepdbwubei") re.allchar (str.to_re "xcmopvxwisluavatpotwi") (re.* re.allchar) (str.to_re "fdd") (re.* re.allchar) (str.to_re "ktyipvnsipowxoregnbuhcwrspr") (re.* re.allchar) (str.to_re "eblgwglcsudmertdhrkupzgslliwbhn") re.allchar (str.to_re "b") re.allchar (str.to_re "rznfatzprukhdzyvzjfezu") (re.* re.allchar) (str.to_re "afkcxeksdmqqk") re.allchar (str.to_re "wdhu") (re.* re.allchar) (str.to_re "jpcyfbgfqrqtlfkmjley") re.allchar (str.to_re "ok") re.allchar (str.to_re "nnqzhbhegagniicsskwuhzlm") re.allchar (str.to_re "pvycgcboxdlnkwsggtwioobppjtggzfefsq") re.allchar (str.to_re "afe") re.allchar (str.to_re "nz") re.allchar (str.to_re "petovxljrcl") (re.* re.allchar) (str.to_re "cywuycqgpjhkpifpobglg") (re.* re.allchar) (str.to_re "mcyzlofpqykzocmsaobhbeyqncuufiexzc") (re.* re.allchar) (str.to_re "bcmyhbfjlqmmbtwldse") re.allchar (re.* re.allchar) (str.to_re "bevi") (re.* re.allchar) (str.to_re "qn") (re.* re.allchar) (str.to_re "acwedex") (re.* re.allchar) (str.to_re "d") re.allchar (str.to_re "nsmiemyukeldgnwvymsxyepgh") )   (re.++ (str.to_re "pecvwui") re.allchar (str.to_re "hdp") (re.* re.allchar) (str.to_re "abtxbvdvrclujcgktqanlym") (re.* re.allchar) (str.to_re "e") re.allchar (str.to_re "eoocnqkrh") (re.* re.allchar) (str.to_re "inoatpqrvwsk") (re.* re.allchar) (str.to_re "be") re.allchar (str.to_re "iigcuppfrfhggmgoomtwfjfjj") re.allchar (str.to_re "xpmhfluilrdqw") (re.* re.allchar) (str.to_re "rnghwzhfsvo") (re.* re.allchar) (str.to_re "qlknikj") (re.* re.allchar) (str.to_re "mskxht") (re.* re.allchar) (str.to_re "u") re.allchar (re.* re.allchar) (str.to_re "wwhfjg") re.allchar (str.to_re "qwrypqbyqbrxcjll") re.allchar (str.to_re "ificmtgfqkbtmeglnalwokm") re.allchar (re.* re.allchar) (str.to_re "tuvrpvswfz") re.allchar (str.to_re "kpqn") (re.* re.allchar) (str.to_re "laep") re.allchar (str.to_re "ftkdxnhlikyspourqzgtli") (re.* re.allchar) (str.to_re "ibljt") re.allchar (str.to_re "llimyjyvgqbhlgs") (re.* re.allchar) re.allchar (str.to_re "ajcoxdlkwxcvlwbgbynn") re.allchar (str.to_re "bkxtkcigobucobthkdluttswktfmfdmezhx") re.allchar (str.to_re "ytmbuhr") re.allchar (str.to_re "sobogbx") re.allchar (str.to_re "ugzsxvrrthtzwcfw") re.allchar (str.to_re "fgfhcyyjetwiasbzrsxo") (re.* re.allchar) (str.to_re "c") (re.* re.allchar) (str.to_re "avzklpijeszvzwopndecoygbc") re.allchar (str.to_re "mgmd") re.allchar (str.to_re "oehmr") (re.* re.allchar) (str.to_re "eyrbc") )  )))
(check-sat)
(exit)
