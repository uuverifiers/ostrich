(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.union (re.union (str.to_re "0") (str.to_re "1")) (re.+ (str.to_re "2"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "44")) (re.union (str.to_re "5") (str.to_re "66"))) (re.++ (re.union (re.* (str.to_re "7")) (re.+ (str.to_re "888"))) (re.++ (re.+ (re.+ (str.to_re "999"))) (re.++ (re.* (re.+ (str.to_re "aa"))) (re.++ (re.* (re.+ (str.to_re "b"))) (re.++ (re.+ (re.* (str.to_re "cc"))) (re.++ (re.union (re.union (str.to_re "ddd") (str.to_re "e")) (re.+ (str.to_re "f"))) (re.++ (re.* (re.union (str.to_re "gg") (str.to_re "hhh"))) (re.++ (re.* (re.union (str.to_re "ii") (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "kk") (str.to_re "ll")) (re.union (str.to_re "mmm") (str.to_re "n"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.+ (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "qqq"))) (re.++ (re.+ (re.* (str.to_re "rr"))) (re.++ (re.* (re.* (str.to_re "sss"))) (re.++ (re.* (re.* (str.to_re "t"))) (re.++ (re.+ (re.+ (str.to_re "uuu"))) (re.++ (re.* (re.+ (str.to_re "vv"))) (re.++ (re.* (re.* (str.to_re "w"))) (re.++ (re.* (re.union (str.to_re "xxx") (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.* (re.+ (str.to_re "AAA"))) (re.++ (re.+ (re.* (str.to_re "B"))) (re.++ (re.* (re.* (str.to_re "C"))) (re.++ (re.* (re.* (str.to_re "DDD"))) (re.++ (re.+ (re.union (str.to_re "EE") (str.to_re "F"))) (re.++ (re.* (re.* (str.to_re "G"))) (re.++ (re.union (re.union (str.to_re "H") (str.to_re "III")) (re.union (str.to_re "JJ") (str.to_re "KK"))) (re.++ (re.* (re.union (str.to_re "LL") (str.to_re "MM"))) (re.++ (re.union (re.+ (str.to_re "NNN")) (re.+ (str.to_re "O"))) (re.++ (re.* (re.union (str.to_re "P") (str.to_re "QQ"))) (re.++ (re.+ (re.+ (str.to_re "RRR"))) (re.++ (re.union (re.* (str.to_re "SS")) (re.+ (str.to_re "TT"))) (re.++ (re.union (re.union (str.to_re "UU") (str.to_re "V")) (re.* (str.to_re "WWW"))) (re.++ (re.* (re.union (str.to_re "X") (str.to_re "Y"))) (re.++ (re.+ (re.* (str.to_re "ZZZ"))) (re.++ (re.* (re.union (str.to_re "!") (str.to_re """"""""))) (re.++ (re.+ (re.+ (str.to_re "##"))) (re.++ (re.union (re.union (str.to_re "$") (str.to_re "%%%")) (re.* (str.to_re "&&"))) (re.++ (re.union (re.union (str.to_re "''") (str.to_re "(((")) (re.union (str.to_re ")") (str.to_re "***"))) (re.++ (re.+ (re.* (str.to_re "+"))) (re.++ (re.* (re.* (str.to_re ","))) (re.++ (re.union (re.union (str.to_re "-") (str.to_re "...")) (re.* (str.to_re "//"))) (re.++ (re.union (re.union (str.to_re ":::") (str.to_re ";;;")) (re.union (str.to_re "<<<") (str.to_re "=="))) (re.++ (re.union (re.+ (str.to_re ">>>")) (re.+ (str.to_re "??"))) (re.++ (re.+ (re.union (str.to_re "@@") (str.to_re "[["))) (re.++ (re.* (re.+ (str.to_re "\\"))) (re.++ (re.+ (re.* (str.to_re "]"))) (re.++ (re.+ (re.* (str.to_re "^^"))) (re.++ (re.union (re.* (str.to_re "_")) (re.union (str.to_re "```") (str.to_re "{"))) (re.++ (re.* (re.* (str.to_re "|||"))) (re.++ (re.* (re.* (str.to_re "}}"))) (re.++ (re.+ (re.union (str.to_re "~~") (str.to_re "0"))) (re.++ (re.* (re.* (str.to_re "11"))) (re.++ (re.union (re.+ (str.to_re "22")) (re.* (str.to_re "3"))) (re.++ (re.* (re.+ (str.to_re "44"))) (re.++ (re.* (re.* (str.to_re "55"))) (re.++ (re.+ (re.* (str.to_re "66"))) (re.++ (re.union (re.+ (str.to_re "7")) (re.union (str.to_re "88") (str.to_re "9"))) (re.++ (re.union (re.+ (str.to_re "aa")) (re.+ (str.to_re "b"))) (re.++ (re.union (re.* (str.to_re "cc")) (re.+ (str.to_re "dd"))) (re.++ (re.union (re.+ (str.to_re "e")) (re.+ (str.to_re "f"))) (re.++ (re.+ (re.* (str.to_re "gg"))) (re.++ (re.* (re.union (str.to_re "h") (str.to_re "iii"))) (re.++ (re.* (re.* (str.to_re "j"))) (re.++ (re.union (re.union (str.to_re "kkk") (str.to_re "lll")) (re.* (str.to_re "mm"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.+ (re.* (str.to_re "ooo"))) (re.++ (re.* (re.* (str.to_re "pp"))) (re.++ (re.* (re.+ (str.to_re "q"))) (re.++ (re.union (re.* (str.to_re "rrr")) (re.+ (str.to_re "sss"))) (re.++ (re.* (re.union (str.to_re "ttt") (str.to_re "u"))) (re.++ (re.* (re.+ (str.to_re "vv"))) (re.++ (re.union (re.* (str.to_re "www")) (re.union (str.to_re "x") (str.to_re "y"))) (re.++ (re.* (re.+ (str.to_re "z"))) (re.++ (re.union (re.union (str.to_re "AAA") (str.to_re "BB")) (re.* (str.to_re "CC"))) (re.++ (re.union (re.union (str.to_re "DD") (str.to_re "E")) (re.+ (str.to_re "FFF"))) (re.+ (re.* (str.to_re "G"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
