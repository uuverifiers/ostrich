(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "000") (str.to_re "111"))) (re.++ (re.union (re.union (str.to_re "2") (str.to_re "33")) (re.union (str.to_re "44") (str.to_re "55"))) (re.++ (re.union (re.+ (str.to_re "66")) (re.+ (str.to_re "77"))) (re.++ (re.+ (re.+ (str.to_re "888"))) (re.++ (re.* (re.union (str.to_re "9") (str.to_re "a"))) (re.++ (re.union (re.union (str.to_re "b") (str.to_re "cc")) (re.union (str.to_re "dd") (str.to_re "e"))) (re.++ (re.* (re.* (str.to_re "f"))) (re.++ (re.+ (re.+ (str.to_re "g"))) (re.++ (re.+ (re.* (str.to_re "hh"))) (re.++ (re.* (re.* (str.to_re "i"))) (re.++ (re.* (re.union (str.to_re "j") (str.to_re "k"))) (re.++ (re.+ (re.* (str.to_re "l"))) (re.++ (re.* (re.union (str.to_re "m") (str.to_re "nnn"))) (re.++ (re.union (re.union (str.to_re "ooo") (str.to_re "p")) (re.union (str.to_re "q") (str.to_re "rrr"))) (re.++ (re.* (re.* (str.to_re "s"))) (re.++ (re.* (re.* (str.to_re "ttt"))) (re.++ (re.union (re.+ (str.to_re "uu")) (re.+ (str.to_re "vvv"))) (re.++ (re.union (re.* (str.to_re "ww")) (re.* (str.to_re "x"))) (re.++ (re.* (re.+ (str.to_re "yy"))) (re.++ (re.* (re.+ (str.to_re "zzz"))) (re.++ (re.union (re.union (str.to_re "A") (str.to_re "B")) (re.union (str.to_re "CCC") (str.to_re "DD"))) (re.++ (re.+ (re.* (str.to_re "EE"))) (re.++ (re.+ (re.* (str.to_re "F"))) (re.++ (re.union (re.union (str.to_re "GGG") (str.to_re "HH")) (re.* (str.to_re "III"))) (re.++ (re.+ (re.union (str.to_re "JJJ") (str.to_re "KK"))) (re.++ (re.union (re.union (str.to_re "L") (str.to_re "MMM")) (re.+ (str.to_re "N"))) (re.++ (re.* (re.+ (str.to_re "OO"))) (re.++ (re.+ (re.union (str.to_re "PP") (str.to_re "QQQ"))) (re.++ (re.+ (re.+ (str.to_re "RR"))) (re.++ (re.union (re.union (str.to_re "SSS") (str.to_re "TT")) (re.union (str.to_re "UU") (str.to_re "VV"))) (re.++ (re.+ (re.union (str.to_re "W") (str.to_re "XX"))) (re.++ (re.+ (re.union (str.to_re "Y") (str.to_re "ZZZ"))) (re.++ (re.* (re.union (str.to_re "!") (str.to_re """"""))) (re.++ (re.union (re.* (str.to_re "##")) (re.* (str.to_re "$$"))) (re.++ (re.union (re.+ (str.to_re "%")) (re.+ (str.to_re "&&"))) (re.++ (re.union (re.* (str.to_re "'''")) (re.* (str.to_re "("))) (re.++ (re.union (re.union (str.to_re ")))") (str.to_re "*")) (re.+ (str.to_re "+"))) (re.++ (re.union (re.+ (str.to_re ",,")) (re.union (str.to_re "---") (str.to_re "..."))) (re.++ (re.* (re.* (str.to_re "///"))) (re.++ (re.* (re.+ (str.to_re ":"))) (re.++ (re.union (re.* (str.to_re ";")) (re.union (str.to_re "<<<") (str.to_re "=="))) (re.++ (re.+ (re.* (str.to_re ">>"))) (re.++ (re.union (re.* (str.to_re "??")) (re.union (str.to_re "@@@") (str.to_re "[["))) (re.++ (re.+ (re.* (str.to_re "\\\\\\"))) (re.++ (re.+ (re.* (str.to_re "]]]"))) (re.++ (re.+ (re.union (str.to_re "^") (str.to_re "__"))) (re.++ (re.* (re.+ (str.to_re "```"))) (re.++ (re.* (re.union (str.to_re "{") (str.to_re "|||"))) (re.++ (re.+ (re.* (str.to_re "}}}"))) (re.++ (re.+ (re.* (str.to_re "~~"))) (re.++ (re.union (re.union (str.to_re "00") (str.to_re "1")) (re.+ (str.to_re "2"))) (re.++ (re.+ (re.union (str.to_re "333") (str.to_re "444"))) (re.++ (re.union (re.+ (str.to_re "5")) (re.union (str.to_re "666") (str.to_re "7"))) (re.++ (re.union (re.+ (str.to_re "888")) (re.* (str.to_re "99"))) (re.++ (re.union (re.* (str.to_re "aa")) (re.* (str.to_re "b"))) (re.++ (re.union (re.+ (str.to_re "c")) (re.union (str.to_re "d") (str.to_re "eee"))) (re.++ (re.+ (re.* (str.to_re "fff"))) (re.++ (re.union (re.* (str.to_re "ggg")) (re.+ (str.to_re "hhh"))) (re.union (re.union (str.to_re "i") (str.to_re "jj")) (re.+ (str.to_re "k")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
