(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Dmitry Blotsky1, Federico Mora, Murphy Berzish, Yunhui Zheng, Ifaz Kabir, Vijay Ganesh, Zhengyang Lu
Generated on: 2018-01-24
Generator: StringFuzz
Application: Evaluate string solvers
Target solver: Z3str3, CVC4, Z3str2, Norn
Publications: Blotsky, D., Mora, F., Berzish, M., Zheng, Y., Kabir, I., & Ganesh, V. (2018). Stringfuzz: A fuzzer for string solvers. In CAV 2018.
Description: new instance generated by StringFuzz, a modular string and regex fuzzer
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ (re.* (re.union (str.to_re "00") (str.to_re "11"))) (re.++ (re.+ (re.union (str.to_re "2") (str.to_re "3"))) (re.++ (re.union (re.union (str.to_re "44") (str.to_re "55")) (re.union (str.to_re "6") (str.to_re "77"))) (re.++ (re.+ (re.* (str.to_re "888"))) (re.++ (re.+ (re.* (str.to_re "99"))) (re.++ (re.union (re.+ (str.to_re "aa")) (re.* (str.to_re "bbb"))) (re.++ (re.* (re.* (str.to_re "cc"))) (re.++ (re.* (re.+ (str.to_re "dd"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.+ (re.union (str.to_re "ggg") (str.to_re "h"))) (re.++ (re.+ (re.* (str.to_re "i"))) (re.++ (re.* (re.+ (str.to_re "jj"))) (re.++ (re.union (re.union (str.to_re "k") (str.to_re "lll")) (re.* (str.to_re "mmm"))) (re.++ (re.+ (re.+ (str.to_re "nn"))) (re.++ (re.+ (re.union (str.to_re "ooo") (str.to_re "pp"))) (re.++ (re.+ (re.union (str.to_re "qqq") (str.to_re "r"))) (re.++ (re.+ (re.union (str.to_re "ss") (str.to_re "t"))) (re.++ (re.union (re.+ (str.to_re "u")) (re.+ (str.to_re "vv"))) (re.++ (re.+ (re.* (str.to_re "www"))) (re.++ (re.union (re.* (str.to_re "xxx")) (re.* (str.to_re "yyy"))) (re.++ (re.union (re.+ (str.to_re "z")) (re.+ (str.to_re "A"))) (re.++ (re.* (re.union (str.to_re "BBB") (str.to_re "C"))) (re.++ (re.union (re.+ (str.to_re "D")) (re.* (str.to_re "EEE"))) (re.++ (re.+ (re.+ (str.to_re "FF"))) (re.++ (re.* (re.+ (str.to_re "G"))) (re.++ (re.* (re.* (str.to_re "HHH"))) (re.++ (re.* (re.+ (str.to_re "III"))) (re.++ (re.+ (re.+ (str.to_re "JJJ"))) (re.++ (re.+ (re.+ (str.to_re "KKK"))) (re.++ (re.+ (re.union (str.to_re "LLL") (str.to_re "M"))) (re.++ (re.* (re.+ (str.to_re "NN"))) (re.++ (re.+ (re.union (str.to_re "OOO") (str.to_re "PP"))) (re.++ (re.* (re.union (str.to_re "QQ") (str.to_re "RR"))) (re.++ (re.* (re.* (str.to_re "SSS"))) (re.++ (re.+ (re.* (str.to_re "TT"))) (re.++ (re.union (re.* (str.to_re "U")) (re.* (str.to_re "V"))) (re.++ (re.union (re.union (str.to_re "WWW") (str.to_re "X")) (re.* (str.to_re "Y"))) (re.++ (re.union (re.+ (str.to_re "ZZ")) (re.union (str.to_re "!!") (str.to_re """"""""))) (re.++ (re.+ (re.union (str.to_re "##") (str.to_re "$$"))) (re.++ (re.* (re.+ (str.to_re "%%%"))) (re.union (re.+ (str.to_re "&&")) (re.+ (str.to_re "'''")))))))))))))))))))))))))))))))))))))))))))))
(assert (not (str.in_re var0 (re.++ (re.* (re.+ (str.to_re "000"))) (re.++ (re.union (re.* (str.to_re "11")) (re.+ (str.to_re "222"))) (re.++ (re.union (re.union (str.to_re "33") (str.to_re "444")) (re.+ (str.to_re "555"))) (re.++ (re.* (re.union (str.to_re "666") (str.to_re "777"))) (re.++ (re.union (re.+ (str.to_re "88")) (re.* (str.to_re "99"))) (re.++ (re.* (re.union (str.to_re "aa") (str.to_re "bb"))) (re.++ (re.* (re.+ (str.to_re "c"))) (re.++ (re.+ (re.* (str.to_re "ddd"))) (re.++ (re.* (re.union (str.to_re "eee") (str.to_re "ff"))) (re.++ (re.* (re.union (str.to_re "g") (str.to_re "hh"))) (re.++ (re.+ (re.* (str.to_re "ii"))) (re.++ (re.* (re.union (str.to_re "jj") (str.to_re "k"))) (re.++ (re.* (re.+ (str.to_re "lll"))) (re.++ (re.+ (re.* (str.to_re "mmm"))) (re.++ (re.+ (re.* (str.to_re "nnn"))) (re.++ (re.union (re.+ (str.to_re "o")) (re.* (str.to_re "p"))) (re.++ (re.* (re.+ (str.to_re "qq"))) (re.++ (re.* (re.* (str.to_re "rr"))) (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (re.union (re.union (str.to_re "t") (str.to_re "uuu")) (re.+ (str.to_re "v"))) (re.++ (re.* (re.* (str.to_re "ww"))) (re.++ (re.* (re.union (str.to_re "xxx") (str.to_re "yy"))) (re.++ (re.union (re.* (str.to_re "zz")) (re.+ (str.to_re "A"))) (re.++ (re.+ (re.union (str.to_re "BB") (str.to_re "CC"))) (re.++ (re.union (re.+ (str.to_re "DD")) (re.* (str.to_re "EEE"))) (re.++ (re.union (re.union (str.to_re "FFF") (str.to_re "GG")) (re.+ (str.to_re "HHH"))) (re.++ (re.union (re.* (str.to_re "II")) (re.* (str.to_re "JJ"))) (re.++ (re.union (re.union (str.to_re "K") (str.to_re "LL")) (re.* (str.to_re "MMM"))) (re.++ (re.+ (re.+ (str.to_re "NN"))) (re.++ (re.+ (re.union (str.to_re "O") (str.to_re "P"))) (re.++ (re.union (re.* (str.to_re "QQQ")) (re.* (str.to_re "R"))) (re.++ (re.union (re.+ (str.to_re "SS")) (re.union (str.to_re "T") (str.to_re "UU"))) (re.++ (re.+ (re.* (str.to_re "VVV"))) (re.++ (re.+ (re.* (str.to_re "WWW"))) (re.++ (re.union (re.union (str.to_re "XXX") (str.to_re "Y")) (re.union (str.to_re "ZZZ") (str.to_re "!!!"))) (re.++ (re.* (re.* (str.to_re """"))) (re.++ (re.union (re.* (str.to_re "###")) (re.+ (str.to_re "$$"))) (re.++ (re.union (re.union (str.to_re "%%") (str.to_re "&")) (re.union (str.to_re "'") (str.to_re "((("))) (re.++ (re.union (re.union (str.to_re ")))") (str.to_re "**")) (re.+ (str.to_re "++"))) (re.++ (re.* (re.* (str.to_re ",,"))) (re.union (re.+ (str.to_re "-")) (re.union (str.to_re "..") (str.to_re "//"))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
