(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Wei-Cheng Wu
Generated on: 2019-07-28
Generator: Py-Conbyte
Application: Concolic execution of Python code
Target solver: CVC4, Z3, Z3str3, Z3-Trau
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun tstr () String)


(assert (not ( > ( ite ( str.prefixof "-" ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) ( - ( str.to_int ( str.substr ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  ) 1 ( - ( str.len ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) 1  )  )  )  ) ( str.to_int ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  )  ) 60  )))

(assert (not ( < ( ite ( str.prefixof "-" ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) ( - ( str.to_int ( str.substr ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  ) 1 ( - ( str.len ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) 1  )  )  )  ) ( str.to_int ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  )  ) 0  )))

(assert (not ( > ( ite ( str.prefixof "-" ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) ( - ( str.to_int ( str.substr ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  ) 1 ( - ( str.len ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) 1  )  )  )  ) ( str.to_int ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  )  ) 12  )))

(assert (not ( < ( + ( + ( + 0 2  ) 1  ) 2  ) ( str.len tstr  )  )))

(assert ( >= ( + ( + ( + ( + 0 2  ) 1  ) 2  ) 1  ) ( str.len tstr  )  ))

(assert ( ite ( str.prefixof "-" ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) ( and ( ite ( = (- 1) ( str.to_int ( str.substr ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  ) 1 ( - ( str.len ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) 1  )  )  )  ) false true  ) ( > ( str.len ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) 1  )  ) ( ite ( = (- 1) ( str.to_int ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  )  ) false true  )  ))

(assert (not ( < ( - ( str.len tstr  ) ( + ( + 0 2  ) 1  )  ) 2  )))

(assert (not ( not ( = ( str.substr tstr ( + 0 2  ) ( - ( + ( + 0 2  ) 1  ) ( + 0 2  )  )  ) ":"  )  )))

(assert (not ( >= 0 2  )))

(assert (not ( >= ( + ( + 0 2  ) 1  ) ( str.len tstr  )  )))

(assert ( ite ( str.prefixof "-" ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) ( and ( ite ( = (- 1) ( str.to_int ( str.substr ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  ) 1 ( - ( str.len ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) 1  )  )  )  ) false true  ) ( > ( str.len ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  ) 1  )  ) ( ite ( = (- 1) ( str.to_int ( str.substr tstr 0 ( - ( + 0 2  ) 0  )  )  )  ) false true  )  ))

(assert (not ( < ( - ( str.len tstr  ) 0  ) 2  )))
(assert ( < ( ite ( str.prefixof "-" ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) ( - ( str.to_int ( str.substr ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  ) 1 ( - ( str.len ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  ) 1  )  )  )  ) ( str.to_int ( str.substr tstr ( + ( + 0 2  ) 1  ) ( - ( + ( + ( + 0 2  ) 1  ) 2  ) ( + ( + 0 2  ) 1  )  )  )  )  ) 0  ))


(check-sat)

(exit)
