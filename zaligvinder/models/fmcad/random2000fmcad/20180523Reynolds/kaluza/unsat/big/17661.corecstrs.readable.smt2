(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2018-04-25
Generator: Kudzu, converted to v2.6 by CVC4
Application: Symbolic Execution of Javascript
Target solver: Kaluza
Publications: "A symbolic execution framework for JavaScript" by P. Saxena, D. Akhawe, S. Hanna, F. Mao, S. McCamant, and D. Song, 2010.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)



(declare-fun I0_12 () Int)
(declare-fun I0_2 () Int)
(declare-fun I0_9 () Int)
(declare-fun PCTEMP_LHS_1 () Int)
(declare-fun PCTEMP_LHS_2 () Int)
(declare-fun PCTEMP_LHS_3 () Int)
(declare-fun T0_12 () String)
(declare-fun T0_2 () String)
(declare-fun T0_9 () String)
(declare-fun T1_12 () String)
(declare-fun T1_2 () String)
(declare-fun T1_9 () String)
(declare-fun T2_12 () String)
(declare-fun T2_2 () String)
(declare-fun T2_9 () String)
(declare-fun T3_12 () String)
(declare-fun T3_2 () String)
(declare-fun T3_9 () String)
(declare-fun T4_12 () String)
(declare-fun T4_2 () String)
(declare-fun T4_9 () String)
(declare-fun T5_12 () String)
(declare-fun T5_2 () String)
(declare-fun T5_9 () String)
(declare-fun T_2 () Bool)
(declare-fun T_3 () Bool)
(declare-fun T_4 () Bool)
(declare-fun T_5 () Bool)
(declare-fun T_6 () Bool)
(declare-fun T_8 () Bool)
(declare-fun T_SELECT_1 () Bool)
(declare-fun T_SELECT_2 () Bool)
(declare-fun T_SELECT_3 () Bool)
(declare-fun T_a () Bool)
(declare-fun T_b () Bool)
(declare-fun var_0xINPUT_16172 () String)
(assert (= T_SELECT_1 (not (= PCTEMP_LHS_1 (- 1)))))
(assert (ite T_SELECT_1 (and (= PCTEMP_LHS_1 (+ I0_2 0)) (= var_0xINPUT_16172 (str.++ T0_2 T1_2)) (= I0_2 (str.len T4_2)) (= 0 (str.len T0_2)) (= T1_2 (str.++ T2_2 T3_2)) (= T2_2 (str.++ T4_2 T5_2)) (= T5_2 "__utmz=169413169.") (not (str.in_re T4_2 (re.++ (str.to_re "_") (str.to_re "_") (str.to_re "u") (str.to_re "t") (str.to_re "m") (str.to_re "z") (str.to_re "=") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "4") (str.to_re "1") (str.to_re "3") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "."))))) (and (= PCTEMP_LHS_1 (- 1)) (= var_0xINPUT_16172 (str.++ T0_2 T1_2)) (= 0 (str.len T0_2)) (not (str.in_re T1_2 (re.++ (str.to_re "_") (str.to_re "_") (str.to_re "u") (str.to_re "t") (str.to_re "m") (str.to_re "z") (str.to_re "=") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "4") (str.to_re "1") (str.to_re "3") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re ".")))))))
(assert (= T_2 (< (- 1) PCTEMP_LHS_1)))
(assert T_2)
(assert (= T_3 (= "" var_0xINPUT_16172)))
(assert (= T_4 (not T_3)))
(assert T_4)
(assert (= T_5 (= var_0xINPUT_16172 "")))
(assert (= T_6 (not T_5)))
(assert T_6)
(assert (= T_SELECT_2 (not (= PCTEMP_LHS_2 (- 1)))))
(assert (ite T_SELECT_2 (and (= PCTEMP_LHS_2 (+ I0_9 0)) (= var_0xINPUT_16172 (str.++ T0_9 T1_9)) (= I0_9 (str.len T4_9)) (= 0 (str.len T0_9)) (= T1_9 (str.++ T2_9 T3_9)) (= T2_9 (str.++ T4_9 T5_9)) (= T5_9 "__utmz=169413169.") (not (str.in_re T4_9 (re.++ (str.to_re "_") (str.to_re "_") (str.to_re "u") (str.to_re "t") (str.to_re "m") (str.to_re "z") (str.to_re "=") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "4") (str.to_re "1") (str.to_re "3") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "."))))) (and (= PCTEMP_LHS_2 (- 1)) (= var_0xINPUT_16172 (str.++ T0_9 T1_9)) (= 0 (str.len T0_9)) (not (str.in_re T1_9 (re.++ (str.to_re "_") (str.to_re "_") (str.to_re "u") (str.to_re "t") (str.to_re "m") (str.to_re "z") (str.to_re "=") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re "4") (str.to_re "1") (str.to_re "3") (str.to_re "1") (str.to_re "6") (str.to_re "9") (str.to_re ".")))))))
(assert (= T_8 (< (- 1) PCTEMP_LHS_2)))
(assert T_8)
(assert (= T_SELECT_3 (not (= PCTEMP_LHS_3 (- 1)))))
(assert (ite T_SELECT_3 (and (= PCTEMP_LHS_3 (+ I0_12 PCTEMP_LHS_2)) (= var_0xINPUT_16172 (str.++ T0_12 T1_12)) (= I0_12 (str.len T4_12)) (= PCTEMP_LHS_2 (str.len T0_12)) (= T1_12 (str.++ T2_12 T3_12)) (= T2_12 (str.++ T4_12 T5_12)) (= T5_12 ";") (not (str.in_re T4_12 (str.to_re ";")))) (and (= PCTEMP_LHS_3 (- 1)) (= var_0xINPUT_16172 (str.++ T0_12 T1_12)) (= PCTEMP_LHS_2 (str.len T0_12)) (not (str.in_re T1_12 (str.to_re ";"))))))
(assert (= T_a (< PCTEMP_LHS_3 0)))
(assert (= T_b (not T_a)))
(assert T_b)
(check-sat)

(exit)
