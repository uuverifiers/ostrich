(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Andres Noetzli, Andrew Reynolds, Haniel Barbosa, Aina Niemetz, Mathias Preiner, Clark Barrett, Cesare Tinelli
Generated on: 2018-11-08
Generator: CVC4
Application: Rewrite rule verification
Publications: "Syntax-Guided Rewrite Rule Enumeration for SMT Solvers" by A. Noetzli, A. Reynolds, H. Barbosa, A. Niemetz, M. Preiner, C. Barrett, and C. Tinelli, SAT 2019.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun g1 () String)
(declare-fun g2 () String)
(declare-fun g3 () String)
(declare-fun h1 () String)
(declare-fun h2 () String)
(declare-fun h3 () String)
(declare-fun replace () String)


(declare-fun x () String)
(declare-fun y () String)
(declare-fun x_1 () String)
(declare-fun y_1 () String)
(declare-fun x_2 () String)
(declare-fun y_2 () String)

(assert(= g1 "0110"))
(assert(= g2 "00"))
(assert(= g3 "11"))
(assert(= h1 "010"))
(assert(= h2 "0010"))
(assert(= h3 "0100"))

(assert(str.in_re replace (re.+ (re.union (str.to_re "2")(str.to_re "3")(str.to_re "4")))))
(assert(= x (str.replace_all x_1 "2" g1)))
(assert(= x_1 (str.replace_all x_2 "3" g2)))
(assert(= x_2 (str.replace_all replace "4" g3)))

(assert(= y (str.replace_all y_1 "2" h1)))
(assert(= y_1 (str.replace_all y_2 "3" h2)))
(assert(= y_2 (str.replace_all replace "4" h3)))
(assert(= y x))

(check-sat)
(get-model)
(exit)
